a
(def! a 3)
a
(def! a 3)
a
(def! a 3)
a
(def! a 3)
a
(def! a 3)
a
(def! a 3)
a
(def! a 3)
a
(def! a 3)
a
(let* [a 1] 1)
(def! a 3)
abc
(def! a q)
(let* [a 1] 1)
(let* [a 1] a)
(def! x 2)
x
(let* [a 1] a)
(let* (a 1) a)
(let* [a 1] a)
(let* (a 1) a)
(let* (a 3 DEBUG-EVAL "") a)
(let* (a 3 DEBUG-EVAL true) a)
(let* (a 3 DEBUG-EVAL false) a)
(do (+ 1 2 3))
(do (+ 1 2 3) (1 2))
(do)
(do (+ 1 2 3) (1 2))
(do (+ 1 2 3) (1 2) ["hello"])
(do (+ 1 2 3) (1 2) ["hello"] (def! a 5))
a
(do (+ 1 2 3) (1 2) ["hello"] (def! a 5))
a
(if (true) a)
(if (= (+1 2 3) 6) a)
(if (nil) a (+ 1 2 3))
(do (+ 1 2 3) (1 2) ["hello"] (def! a 5))
(if (nil) a (+ 1 2 3))
(if (nil) a)
(if (false) a)
(if (true) a)
(if (true) (+ 1 2 3))
(if (false) (+ 1 2 3))
(if (false) (+ 1 2 3) nil)
(if (false) (+ 1 2 3) (+ 2 3))
(if false (+ 1 2 3) (+ 2 3))
(if nil (+ 1 2 3) (+ 2 3))
(if (false) (+ 1 2 3) (+ 2 3))
(if (false) (+ 1 2 3) nil)
(if nil (+ 1 2 3) (+ 2 3))
(do (+ 1 2 3) (1 2) ["hello"] (def! a 5))
(if (nil) a (+ 1 2 3))
(if (= (+1 2 3) 6) a)
(1 2 3)
("1" 2 3)
(if (= (+1 2 3) 6) a)
(= (+1 2 3) 6)
(if (= (+1 2 3) 6) a)
(if (nil) a (+ 1 2 3))
(do (+ 1 2 3) (1 2) ["hello"] (def! a 5))
a
(if (nil) a (+ 1 2 3))
(def! a 5)
(if (nil) a (+ 1 2 3))
(fn* (a b) (+ a b))
(fn* (a b) a)
(def! a 5)
(fn* () a)
((fn* () a))
(def! f (fn* () a))
f
(f)
(def! f (fn* () a))
(def! a 5)
(f)
(def! a 5)
(def! f (fn* () a))
((fn* () a))
(def! f "hello")
f
((fn* () a))
(def! a 5)
((fn* () a))
(def! f (fn* () a))
(f)
(def! a 5)
(f)
( (fn* (a) a) )
( (fn* (a) a) 7)
( (fn* (a) (+ a 1)) 10)
( (fn* (a b) (+ a b)) 2 3)
