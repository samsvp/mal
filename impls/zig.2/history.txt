(if (true) a)
(if (= (+1 2 3) 6) a)
(if (nil) a (+ 1 2 3))
(do (+ 1 2 3) (1 2) ["hello"] (def! a 5))
(if (nil) a (+ 1 2 3))
(if (nil) a)
(if (false) a)
(if (true) a)
(if (true) (+ 1 2 3))
(if (false) (+ 1 2 3))
(if (false) (+ 1 2 3) nil)
(if (false) (+ 1 2 3) (+ 2 3))
(if false (+ 1 2 3) (+ 2 3))
(if nil (+ 1 2 3) (+ 2 3))
(if (false) (+ 1 2 3) (+ 2 3))
(if (false) (+ 1 2 3) nil)
(if nil (+ 1 2 3) (+ 2 3))
(do (+ 1 2 3) (1 2) ["hello"] (def! a 5))
(if (nil) a (+ 1 2 3))
(if (= (+1 2 3) 6) a)
(1 2 3)
("1" 2 3)
(if (= (+1 2 3) 6) a)
(= (+1 2 3) 6)
(if (= (+1 2 3) 6) a)
(if (nil) a (+ 1 2 3))
(do (+ 1 2 3) (1 2) ["hello"] (def! a 5))
a
(if (nil) a (+ 1 2 3))
(def! a 5)
(if (nil) a (+ 1 2 3))
(fn* (a b) (+ a b))
(fn* (a b) a)
(def! a 5)
(fn* () a)
((fn* () a))
(def! f (fn* () a))
f
(f)
(def! f (fn* () a))
(def! a 5)
(f)
(def! a 5)
(def! f (fn* () a))
((fn* () a))
(def! f "hello")
f
((fn* () a))
(def! a 5)
((fn* () a))
(def! f (fn* () a))
(f)
(def! a 5)
(f)
( (fn* (a) a) )
( (fn* (a) a) 7)
( (fn* (a) (+ a 1)) 10)
( (fn* (a b) (+ a b)) 2 3)
(do (+ 1 2 3) (1 2) ["hello"] (def! a 5))
(+ 1 2 3)
(+ 1 2 3 4 5 )
(+ (1 2 3))
(+ (1 2 3) (4 5 6))
(+ ("a") ("a"))
(+ ("a") ("b"))
(+ ("a") ("b" "c"))
(+ ("a" "d" ) ("b" "c"))
(+ (1 2 3) (4 5 6))
(+ "" "dsasndjsandsadsadas")
(+ "" "dsasndjsandsadsadadasdsadsadsadsadasdsadasfdsfgfdgf hfghfghfgh s")
{"a" 1}
{"a" 1 "b" 5}
{"a" 1 "b" 5 "c" 10}
(def a "hello")
(def! a "hello")
a
(def! a "hello")
a
(def! a "hello")
{"a" 1 "b" 5 "c" 10}
(def! a "hello")
{a 1 "b" 5 "c" 10}
(def! a "hello")
{a 1 "b" 5 "c" 10}
(def! a "hello")
{a 1 "b" 5 "c" 10}
(def! a "hello")
{a 1 "b" 5 "c" 10}
(1 2 3)
(1 2 3 4 5)
(+ (1 2 3 4 5) (6 7))
(list)
(list 1 2)
(list? 1 2)
(list? ())
(list? 1)
(list? [])
(empty? [])
(empty? [1 2])
